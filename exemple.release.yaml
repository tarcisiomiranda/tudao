name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.x'

    - name: Print GitHub context
      run: echo "$GITHUB_CONTEXT"
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}

    - name: Print environment variables
      run: |
        echo "Run ID: $GITHUB_RUN_ID"
        echo "Workflow: $GITHUB_WORKFLOW"
        echo "Action: $GITHUB_ACTION"
        echo "Actor: $GITHUB_ACTOR"
        echo "Repository: $GITHUB_REPOSITORY"
        echo "Event Name: $GITHUB_EVENT_NAME"
        echo "Event Path: $GITHUB_EVENT_PATH"
        echo "Workspace: $GITHUB_WORKSPACE"
        echo "SHA: $GITHUB_SHA"
        echo "Ref: $GITHUB_REF"
        echo "Head Ref: $GITHUB_HEAD_REF"
        echo "Base Ref: $GITHUB_BASE_REF"

    - name: Print event payload
      run: cat $GITHUB_EVENT_PATH

    - name: Initialize Go module and install dependencies
      run: |
        go mod init docker_exporter
        go get github.com/docker/docker/client
        go get github.com/prometheus/client_golang/prometheus
        go get github.com/prometheus/client_golang/prometheus/promhttp

    - name: Build binary
      run: |
        CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o docker_exporter .

    - name: Extract tag name
      run: echo "TAG_NAME=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.TAG_NAME }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./docker_exporter
        asset_name: docker_exporter
        asset_content_type: application/octet-stream
